<div>
	<%= form_tag map_path(params[:id]), :method => :get do %>
		<input id="red-slider" 
			   type="text" 
			   data-slider-min="0" 
			   data-slider-max="<%= params[:yellow] %>" 
			   data-slider-step="1" 
			   data-slider-value="<%= params[:red] %>" 
			   data-slider-id="red-data-slider" 
			   data-slider-handle="round"/>
		<input id="red-slider-value"
			   name="red" 
			   type="text" onchange="setRedSliderValue(this.value)"/>

		<input id="yellow-slider" 
			   type="text" 
			   data-slider-min="0" 
			   data-slider-max="<%= params[:max] %>" 
			   data-slider-step="1" 
			   data-slider-value="<%= params[:yellow] %>" 
			   data-slider-id="yellow-data-slider" 
			   data-slider-handle="round"/>
		<input id="yellow-slider-value" 
			   name="yellow" 
			   type="text" 
			   onchange="setYellowSliderValue(this.value)"/>

		<input id="yellow-slider-max" type"text" onchange="setYellowMax(this.value)"/>
		<%= submit_tag "Refresh" %>
	<% end %>
</div>

<div class="row">
	<div class="col-xs-8">
		<div style='width: 100%;'>
			<div id="map" style='width: 100%; height: 400px;'></div>
			<script type="text/javascript" charset="utf-8">
				// meter = mile * 0.00062137
				var endUserLatitude = <%= @enduser[:lat] %>;
				var endUserLongitude = <%= @enduser[:lng] %>;
				var endUserCenter = new google.maps.LatLng(endUserLatitude, endUserLongitude);

				map = new google.maps.Map(document.getElementById('map'), {
					center: endUserCenter,
					zoom: 8
					});

				yellow_circle = new google.maps.Circle({
					strokeColor: '#FFFF00',
					strokeWeight: 5,
					fillColor: '#FFFF00',
					fillOpacity: '0.1',
					radius: <%= Integer(params[:yellow]) * 1609.34 %>,
					center: endUserCenter,
					map: map,
					clickable: false
				});
				red_circle = new google.maps.Circle({
					strokeColor: '#FF0000',
					strokeWeight: 5,
					fillColor: '#FF0000',
					fillOpacity: '0.1',
					radius: <%= Integer(params[:red]) * 1609.34 %>,
					center: endUserCenter,
					map: map,
					clickable: false
				});
				
						//'http://maps.google.com/mapfiles/kml/paddle/wht-stars.png');
						//http://maps.google.com/mapfiles/ms/icons/green-dot.png')

				var red_markers = [];
				var yellow_markers = [];
				var green_markers = [];
				var red_icon = "http://maps.google.com/mapfiles/ms/icons/red-dot.png";
				var yellow_icon = "http://maps.google.com/mapfiles/ms/icons/yellow-dot.png";
				var green_icon = "http://maps.google.com/mapfiles/ms/icons/green-dot.png";

				<% @end_users_red.each do |eur| %>
					<% unless eur[:address] == @enduser[:address] %>
						var eurLocation = new google.maps.LatLng(<%= eur[:lat] %>, <%= eur[:lng] %>);
						var mark = new google.maps.Marker({ position: eurLocation, map: map });
						red_markers.unshift(mark);
						red_markers[0].setIcon(red_icon);
					<% end %>
				<% end %>
				<% @end_users_yellow.each do |euy| %>
					var euyLocation = new google.maps.LatLng(<%= euy[:lat] %>, <%= euy[:lng] %>);
					var mark = new google.maps.Marker({ position: euyLocation, map: map });
					yellow_markers.unshift(mark);
					yellow_markers[0].setIcon(yellow_icon);
				<% end %>
				<% @end_users_green.each do |eug| %>
					var eugLocation = new google.maps.LatLng(<%= eug[:lat] %>, <%= eug[:lng] %>);
					var mark = new google.maps.Marker({ position: eugLocation, map: map });
					green_markers.unshift(mark);
					green_markers[0].setIcon(green_icon);
				<% end %>


				var marker = new google.maps.Marker({ position: endUserCenter, map: map, title: '<%= @enduser[:name] %>' });
				var markerinfo = new google.maps.InfoWindow({ content: '<%= @enduser[:address] %>' });
				marker.addListener('click', function() { markerinfo.open(map, marker); } );
				marker.setIcon("http://maps.google.com/mapfiles/kml/paddle/blu-stars-lv.png");


				var bounds = yellow_circle.getBounds();

				map.fitBounds(bounds);
/*
				var handler = Gmaps.build('Google');
				var yellow, green, red;
				handler.buildMap({ internal: {id: 'map'}}, function(){
					var markers = handler.addMarkers([
						{ lat: 43, lng: 3.5},
						{ lat: 45, lng: 4},
						{ lat: 47, lng: 3},
						{ lat: 49, lng: 4},
						{ lat: 51, lng: 3.5}
						],
						{ strokeColor: '#00FF00' });

					green = handler.addCircles(
						[{ lat: 47, lng: 3, radius: 500000}],
						{
							strokeColor: '#00FF00',
							fillColor: '#00FF00',
							fillOpacity: '0.1'
						});
					yellow = handler.addCircles(
						[{ lat: 47, lng: 3, radius: 250000}],
						{
							strokeColor: '#FFFF00',
							fillColor: '#FFFF00',
							fillOpacity: '0.1'
						});
					red = handler.addCircles(
						[{ lat: 47, lng: 3, radius: 100000}],
						{
							strokeColor: '#FF0000',
							fillColor: '#FF0000',
							fillOpacity: '0.1'
						});

					handler.bounds.extendWith(markers);
					handler.fitMapToBounds();
				});
				yellow.setRadius(1000);*/
			</script>
		</div>	  
	</div>
	<div class='col-xs-4'>
		<div class="panel-group" id="accordion">
			<% @current_keys = @green_key_codes %>
			<% @uid = "green-key-codes" %>
			<%= render 'list' %>

			<% @current_keys = @yellow_key_codes %>
			<% @uid = "yellow-key-codes" %>
			<%= render 'list' %>

			<% @current_keys = @red_key_codes %>
			<% @uid = "red-key-codes" %>
			<%= render 'list' %>
		</div>
	</div>
</div>
